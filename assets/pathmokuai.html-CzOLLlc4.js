import{_ as n,o as a,c as s,a as t}from"./app-BGYiCm6m.js";const p={},o=t(`<h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h3><p>​ path 模块是处理路径的模块，提供方法和属性用来满足对路径的处理需求</p><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h3><h5 id="path-join-paths" tabindex="-1"><a class="header-anchor" href="#path-join-paths"><span>path.join([...paths])</span></a></h5><ul><li><p><strong>参数说明</strong>：[...paths]:路径数组</p></li><li><p><strong>作用</strong>：将多个路径片段拼接成完整的路径字符串</p></li></ul><pre><code class="language-ts"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fullPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  a/b/c</span>
</code></pre><h5 id="path-basename-path-ext" tabindex="-1"><a class="header-anchor" href="#path-basename-path-ext"><span>path.basename(path,ext)</span></a></h5><ul><li><p><strong>参数说明</strong>：path:路径字符串,ext：文件扩展名，如果不为空则省略路径字符串的扩展名</p></li><li><p><strong>作用</strong>：获取文件名</p></li></ul><pre><code class="language-ts"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fpath <span class="token operator">=</span> <span class="token string">&quot;../a/b/c/index.html&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fullName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>fpath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// index.html</span>
<span class="token keyword">const</span> nameWithoutExt <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>fpath<span class="token punctuation">,</span> <span class="token string">&quot;.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// index</span>
</code></pre><h5 id="path-extname-path" tabindex="-1"><a class="header-anchor" href="#path-extname-path"><span>path.extname(path)</span></a></h5><ul><li><p><strong>参数说明</strong>：path:路径字符串</p></li><li><p><strong>作用</strong>：获取文件的扩展名</p></li></ul><pre><code class="language-ts"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fpath <span class="token operator">=</span> <span class="token string">&quot;a/b/c/index.html&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fext <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>fpath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// .html</span>
</code></pre><h5 id="path-dirname-path" tabindex="-1"><a class="header-anchor" href="#path-dirname-path"><span>path.dirname(path)</span></a></h5><ul><li><p><strong>参数说明</strong>：path:路径字符串</p></li><li><p><strong>作用</strong>：获取文件所在目录</p></li></ul><pre><code class="language-ts"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fpath <span class="token operator">=</span> <span class="token string">&quot;a/b/c/index.html&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fext <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>fpath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// a/b/c</span>
</code></pre><h5 id="path-resolve-paths" tabindex="-1"><a class="header-anchor" href="#path-resolve-paths"><span>path.resolve([...paths])</span></a></h5><ul><li><p><strong>参数说明</strong>:路径数组</p></li><li><p><strong>作用</strong>:将路径数组拼接解析为规范绝对路径</p></li><li><p><strong>注意</strong>：路径片段是从右拼接到左，当没有传入 path 片段，返回当前工作目录的绝对路径</p></li></ul><pre><code class="language-ts"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;/foo/bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 返回: &#39;/foo/bar/baz&#39;</span>

path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;/foo/bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/tmp/file/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 返回: &#39;/tmp/file&#39;</span>

path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;wwwroot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;static_files/png/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;../gif/image.gif&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 如果当前工作目录是 /home/myself/node，</span>
<span class="token comment">// 则返回 &#39;/home/myself/node/wwwroot/static_files/gif/image.gif&#39;</span>
</code></pre><h5 id="path-parse-path" tabindex="-1"><a class="header-anchor" href="#path-parse-path"><span>path.parse(path)</span></a></h5><ul><li><p><strong>参数说明</strong>：path:路径字符串</p></li><li><p><strong>作用</strong>：解析路径并返回路径对象，属性包含base,extd等</p></li></ul><h5 id="path-sep-path" tabindex="-1"><a class="header-anchor" href="#path-sep-path"><span>path.sep(path)</span></a></h5><ul><li><strong>参数说明</strong>：path:路径字符串</li><li><strong>作用</strong>：返回路径分隔符,window（/），Linux（\\）</li></ul>`,22),e=[o];function c(l,u){return a(),s("div",null,e)}const r=n(p,[["render",c],["__file","pathmokuai.html.vue"]]),k=JSON.parse('{"path":"/blogs/Node/pathmokuai.html","title":"path模块","lang":"en-US","frontmatter":{"title":"path模块","date":"2023-01-06T00:00:00.000Z","tags":["NodeJS"],"categories":["Node"]},"headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}],"git":{"createdTime":1717677053000,"updatedTime":1717677053000,"contributors":[{"name":"wkq","email":"444296534@qq.com","commits":1}]},"filePathRelative":"blogs/Node/path模块.md"}');export{r as comp,k as data};
