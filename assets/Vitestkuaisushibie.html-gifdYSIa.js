import{_ as p,r as o,o as e,c,b as s,d as n,e as l,a}from"./app-BGYiCm6m.js";const u={},i=a('<h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h3><p>Vitest 是一个由 Vite 提供支持的极速单元测试框架有以下特点：</p><ul><li><p>开箱即用的 TypeScript / JSX 支持</p></li><li><p>支持测试 Vue、React、Lit 等框架中的组件</p></li><li><p>jest友好(兼容jest的快照测试)</p><p>个人感受就是单元测试很友好，配置与vite通用，如果是使用vite开发的项目，测试框架首选Vitest</p></li></ul><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3>',4),r=s("li",null,[s("code",null,"vitest"),n(": 测试框架，用于执行整个测试过程并提供断言库、mock、覆盖率")],-1),k=s("li",null,[s("code",null,"js-dom"),n(": 通过提供 Browser API 模拟浏览器环境")],-1),d=s("code",null,"@vue/test-utils",-1),g=s("code",null,"Vue",-1),h={href:"https://v1.test-utils.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},q=s("li",null,"resize-observer-polyfill：页面调整观察者填充的大小",-1),m=s("li",null,"@vitest/ui：测试可视化界面",-1),v=a(`<pre><code>pnpm add -D vitest  @vue/test-utils jsdom @vitest/ui resize-observer-polyfill
</code></pre><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h3><h6 id="新建vitest-config-ts文件" tabindex="-1"><a class="header-anchor" href="#新建vitest-config-ts文件"><span>新建vitest.config.ts文件</span></a></h6><pre><code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vitest/config&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    optimizeDeps<span class="token operator">:</span> <span class="token punctuation">{</span>
        disabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    test<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// 测试报告生成 default：终端  html: vitestUI</span>
        reporters<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> 
        <span class="token comment">// 每次测试前 所有监听清除模拟历史记录</span>
        clearMocks<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token comment">// vitest的测试环境</span>
        environment<span class="token operator">:</span> <span class="token string">&quot;jsdom&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// 在每个测试文件之前运行</span>
        <span class="token comment">// setupFiles: [&quot;./vitest.setup.ts&quot;],</span>
        <span class="token comment">//模块的转换方式</span>
        transformMode<span class="token operator">:</span> <span class="token punctuation">{</span>
            web<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.[jt]sx$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h6 id="新建vitest-setup-ts文件" tabindex="-1"><a class="header-anchor" href="#新建vitest-setup-ts文件"><span>新建vitest.setup.ts文件</span></a></h6><pre><code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">{</span> config <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> vi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vitest&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ResizeObserver <span class="token keyword">from</span> <span class="token string">&#39;resize-observer-polyfill&#39;</span><span class="token punctuation">;</span>

vi<span class="token punctuation">.</span><span class="token function">stubGlobal</span><span class="token punctuation">(</span><span class="token string">&#39;ResizeObserver&#39;</span><span class="token punctuation">,</span> ResizeObserver<span class="token punctuation">)</span><span class="token punctuation">;</span>

config<span class="token punctuation">.</span>global<span class="token punctuation">.</span>stubs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><h6 id="新建tsconfig-vitest-json文件" tabindex="-1"><a class="header-anchor" href="#新建tsconfig-vitest-json文件"><span>新建tsconfig.vitest.json文件</span></a></h6><pre><code class="language-ts"><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./tsconfig.json&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;composite&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ES2021&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DOM&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DOM.Iterable&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jsdom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;unplugin-vue-macros/macros-global&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;packages&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;vitest.setup.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;typings/env.d.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;**/*.md&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

</code></pre><h6 id="packge-json文件添加运行脚本" tabindex="-1"><a class="header-anchor" href="#packge-json文件添加运行脚本"><span>packge.json文件添加运行脚本</span></a></h6><pre><code class="language-json">    <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vitest --ui&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;test:coverage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vitest run --coverage&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><h5 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h5>`,11);function f(b,y){const t=o("ExternalLinkIcon");return e(),c("div",null,[i,s("ul",null,[r,k,s("li",null,[d,n(" 工具库: "),g,n("推荐的测试工具库, "),s("a",h,[n("官网文档"),l(t)])]),q,m]),v])}const x=p(u,[["render",f],["__file","Vitestkuaisushibie.html.vue"]]),V=JSON.parse('{"path":"/blogs/Vue/Vitestkuaisushibie.html","title":"Vitest快速识别","lang":"en-US","frontmatter":{"title":"Vitest快速识别","date":"2023-2-8","tags":["Vitest"],"categories":["Vue"]},"headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]}],"git":{"createdTime":1717677053000,"updatedTime":1717677053000,"contributors":[{"name":"wkq","email":"444296534@qq.com","commits":1}]},"filePathRelative":"blogs/Vue/Vitest快速识别.md"}');export{x as comp,V as data};
